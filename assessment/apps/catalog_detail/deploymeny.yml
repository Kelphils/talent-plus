apiVersion: apps/v1
kind: Deployment
metadata:
  name:  dev-catalog
  namespace: tplus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dev-catalog
  template:
    metadata:
      labels:
        app: dev-catalog
    spec:
      containers:
        - name: dev-catalog-container
          image: "public.ecr.aws/u2g6w7p2/eks-workshop-demo/product_catalog:1.0"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /products/ping
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /products/ping
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: AGG_APP_URL
              value: http://proddetail.workshop:3000/catalogDetail
            - name: AWS_XRAY_DAEMON_ADDRESS
              value: xray-service.default:2000
            - name: DATABASE_SERVICE_URL
              value: mysql.workshop
          resources:
            {}


---
apiVersion: v1
kind: Service
metadata:
  name: dev-catalog
  namespace: tplus
  labels:
    app: dev-catalog
spec:
  type: ClusterIP
  ports:
    - port: 5000
      name: http
  selector:
    app: dev-catalog


---
apiVersion: v1
kind: Pod
metadata:
  name: "tplus-p-productcatalog_tplus-test-connection"
  labels:
    app.kubernetes.io/name: productcatalog_workshop
    helm.sh/chart: productcatalog_workshop-1.0.0
    app.kubernetes.io/instance: workshop
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['workshop-productcatalog_workshop:']
  restartPolicy: Never