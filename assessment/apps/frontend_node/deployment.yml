
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-frontend
  namespace: tplus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dev-frontend
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '9000'
      labels:
        app: dev-frontend
    spec:
      containers:
        - name: dev-frontend-container
          image: "public.ecr.aws/u2g6w7p2/eks-workshop-demo/frontend:2.0"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ping
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: BASE_URL
              value: http://prodcatalog.workshop:5000/products/
            - name: AWS_XRAY_DAEMON_ADDRESS
              value: xray-service.default:2000
          resources:
            {}

---
apiVersion: v1
kind: Service
metadata:
  name: dev-frontend-service
  # annotations:
    # service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
  namespace: tplus
  labels:
    app: dev-frontend
spec:
  type: NodePort
  ports:
    - targetPort: 9000
      port: 80
      name: http
  selector:
    app: dev-frontend

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-frontend-ingress
  namespace: tplus
  labels:
    app: tplus
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dev-frontend-service
                port:
                  number: 80   